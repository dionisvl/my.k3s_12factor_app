name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Build image
        run: docker build -t nginx-hello:test .
      
      - name: Test runtime
        run: |
          docker run -d --name test -p 8080:8080 -e NGINX_PORT=8080 nginx-hello:test
          # Wait for the container to be ready
          for i in $(seq 1 10); do
            sleep 2
            curl -f http://localhost:8080/health && break
            echo "Waiting for container to be ready..."
          done
          curl -f http://localhost:8080/ | grep "Hello World"
          curl -f http://localhost:8080/health | grep "OK"
          docker stop test

      - name: Test Kubernetes
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: test

      - name: Setup nginx-ingress
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
          echo "Waiting for ingress controller deployment..."
          kubectl wait --namespace ingress-nginx --for=condition=available deployment/ingress-nginx-controller --timeout=300s
          echo "Waiting for ingress controller pod..."
          kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=180s || true

      - name: Deploy to Kind
        run: |
          kind load docker-image nginx-hello:test --name test
          kubectl apply -f k8s/configmap.yaml
          sed 's/nginx_hello-nginx:latest/nginx-hello:test/g' k8s/k8s-deployment.yaml | kubectl apply -f -
          kubectl apply -f k8s/ingress.yaml || echo "⚠️ Ingress apply failed, continuing with pod tests..."
          
      - name: Wait for deployment
        run: |
          kubectl get pods -l app=nginx-hello
          kubectl describe deployment nginx-hello
          sleep 10
          kubectl describe pods -l app=nginx-hello
          kubectl rollout status deployment/nginx-hello --timeout=180s
          kubectl wait --for=condition=ready pod -l app=nginx-hello --timeout=60s

      - name: Debug deployment
        if: always()
        run: |
          echo "--- Pods status ---"
          kubectl get pods -l app=nginx-hello -o wide
          echo "--- Ingress status ---"
          kubectl get ingress nginx-hello-ingress || echo "Ingress not found"
          kubectl describe ingress nginx-hello-ingress || echo "Cannot describe ingress"
          echo "--- Service status ---"
          kubectl get svc nginx-hello-service
          kubectl get endpoints nginx-hello-service
          echo "--- Describe pods ---"
          for pod in $(kubectl get pods -l app=nginx-hello -o jsonpath='{.items[*].metadata.name}'); do
            echo "--- Describing pod: $pod ---"
            kubectl describe pod $pod
            echo "--- Logs for pod: $pod ---"
            kubectl logs $pod --all-containers=true
          done
          
      - name: Test endpoints
        run: |
          POD_NAME=$(kubectl get pods -l app=nginx-hello -o jsonpath='{.items[0].metadata.name}')
          kubectl exec "${POD_NAME}" -- curl -s http://localhost:8080/ | grep -q "Hello World" && echo "✅ Main page OK"
          kubectl exec "${POD_NAME}" -- curl -s http://localhost:8080/health | grep -q "OK" && echo "✅ Health check OK"

  security:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      
      - name: Build image for security scan
        run: docker build -t nginx-hello:test .
      
      - name: Security scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: nginx-hello:test
          format: 'table'